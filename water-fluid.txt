#include<iostream>
using namespace std;

int max(int a[], int n)
{
	int i,max=a[0];
	for (i = 1; i < n; i++) if (a[i] > max) max = a[i];
	return max;
}

bool count_max(int a[], int n)
{
	int i,count=0;
	for (i = 0; i < n; i++) if (a[i] == max(a,n)) count++;
	if (count > 1) return true;
	return false;
}

int main()
{
	int a[] = { 1,0,3,0,1,3,0,0,1 };
	int size = sizeof(a) / sizeof(int);
	int i,j,m,output=0,temp,sum=0;
	if (count_max(a, size) == false)
	{
		if (a[0]==max(a,size))
		{
			temp = a[size - 1];
			i = size - 2;
			while (i>=0)
			{
				if (a[i] < temp) output += temp - a[i];
				else temp = a[i];
				i--;
			}
		}
		else if (a[size-1]==max(a,size))
		{
			temp = a[0];
			i = 1;
			while (i < size)
			{
				if (a[i] < temp) output += temp - a[i];
				else temp = a[i];
				i++;
			}
		}
		else
		{
			temp = a[0];
			i = 1;
			while (a[i]!=max(a,size))
			{
				if (a[i] < temp) output += temp - a[i];
				else temp = a[i];
				i++;
			}
			temp = a[size - 1];
			i = size - 2;
			while (a[i]!=max(a,size))
			{
				if (a[i] < temp) output += temp - a[i];
				else temp = a[i];
				i--;
			}
		}
	}
	if (count_max(a,size)==true)
	{
		if (a[0] != max(a, size))
		{
			temp = a[0];
			i = 1;
			while (a[i] != max(a, size))
			{
				if (a[i] < temp) output += temp - a[i];
				else temp = a[i];
				i++;
			}
		}
		if (a[size - 1] != max(a, size))
		{
			temp = a[size - 1];
			i = size - 2;
			while (a[i] != max(a, size))
			{
				if (a[i] < temp) output += temp - a[i];
				else temp = a[i];
				i--;
			}
		}
		i = 0; j = size - 1;
		while (a[i] != max(a, size)) i++;
		while (a[j] != max(a, size)) j--;
		for (m = i; m <= j; m++) sum += a[m];
		output += max(a, size) * (j - i + 1) - sum;
	}
	cout << "The water fluid is: " << output << endl;
	return 0;
}